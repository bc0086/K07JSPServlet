<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:jsp="http://java.sun.com/xml/ns/javaee/jsp"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
	id="WebApp_ID" version="3.1">
	<display-name>K07JSPServlet</display-name>
	<context-param>
		<param-name>JDBCDriver</param-name>
		<param-value>oracle.jdbc.OracleDriver</param-value>
	</context-param>

	<context-param>
		<param-name>ConnectionURL</param-name>
		<param-value>jdbc:oracle:thin:@localhost:1521:orcl</param-value>
	</context-param>

	<context-param>
		<param-name>PAGE_SIZE</param-name>
		<param-value>10</param-value>
	</context-param>

	<context-param>
		<param-name>BLOCK_PAGE</param-name>
		<param-value>5</param-value>
	</context-param>

	<session-config>
		<session-timeout>60</session-timeout>
	</session-config>

	<jsp-config>
		<taglib>
			<taglib-uri>myTagLibTld</taglib-uri>
			<taglib-location>/WEB-INF/tlds/MyTagLib.tld</taglib-location>
		</taglib>
	</jsp-config>

	<servlet>
		<servlet-name>NoJSPServlet</servlet-name>
		<servlet-class>servlet.NoJSPServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>NoJSPServlet</servlet-name>
		<url-pattern>/13Servlet/NoJSPServlet.do</url-pattern>
	</servlet-mapping>

	<!-- 서블릿 등록하기 -->
	<servlet>
		<servlet-name>HelloServlet</servlet-name>
		<servlet-class>servlet.HelloServlet</servlet-class>
		<init-param>
			<param-name>HELLO</param-name>
			<param-value>Hi~ Hello~ 안뇽~ web.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>HelloServlet</servlet-name>
		<url-pattern>/13Servlet/HelloServlet.do</url-pattern>
	</servlet-mapping> 
	



	<!-- 예제3 : 어노테이션을 통한 매핑이므로 매핑 엘리먼트 없음 -->

	<!-- 예제4 : 간단한 사칙연산 계산기 구현 -->



	<servlet>
		<servlet-name>CalculateServlet</servlet-name>
		<servlet-class>servlet.CalculateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>CalculateServlet</servlet-name>
		<url-pattern>/Servlet/Calculate.kosmo</url-pattern>
	</servlet-mapping>

	<!-- 예제5 : 간단한 MVC패턴 만들기 -->
	<!-- - 요청명 작성 시 컨텍스트 루트 경로를 제외한 슬러쉬로 시작하는 경로를 사용해야 한다. 슬러쉬가 없으면 서버가 재시동 
		되지 않는다. - 요청명을 통해 해당 이름을 가진 서블릿 클래스를 찾아 요청을 전달한다. - 요청명에 대한 매핑시 엘리먼트의 순서를 
		변경할 수 없다. -->
	<servlet>
		<servlet-name>SimpleMVC</servlet-name>
		<servlet-class>servlet.SimpleMVC</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>SimpleMVC</servlet-name>
		<url-pattern>/SimpleMVC</url-pattern>
	</servlet-mapping>
	<!-- 서블릿 호출을 위한 순서 1. 요청명을 결정한다. 2. 요청명에 대한 매핑처리를 한다. 이떄 요청명과 해당 요청을 처리할 
		서블릿 클래스가 매핑된다. 3. simpleMVC.java로 이동(servlet) -->

	<!-- 해당 웹어플리케이션을 실행했을때 파일명을 명시하지 않으면 아래 파일리스트에 기술된 파일을 찾아서 순서대로 찾아서 실행한다 
		만약 해당 파일이 없으면 404(페이지 없음) 에러가 발생한다. -->
	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
		<welcome-file>index.htm</welcome-file>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>default.html</welcome-file>
		<welcome-file>default.htm</welcome-file>
		<welcome-file>default.jsp</welcome-file>
		<welcome-file>HelloJSP.jsp</welcome-file>
	</welcome-file-list>
	
	<!-- 서블릿으로 게시판 만들기 -->
	<servlet>
		<servlet-name>DataRoomList</servlet-name>
		<servlet-class>controller.ListCtrl</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DataRoomList</servlet-name>
		<url-pattern>/DataRoom/DataList</url-pattern>
	</servlet-mapping>

</web-app>
